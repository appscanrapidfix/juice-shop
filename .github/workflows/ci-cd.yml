name: CI/CD to ECS

on:
  push:
    branches: [ master ]

env:
  AWS_REGION: eu-north-1
  AWS_ROLE_ARN: arn:aws:iam::930900578129:role/juice-shop-github-deploy
  ECR_REPOSITORY: my-app-repo
  ECS_CLUSTER: my-app-cluster
  ECS_SERVICE: my-app-service

permissions:
  id-token: write
  contents: read

concurrency:
  group: ecs-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Debug OIDC subject
        run: |
          echo "repo=${{ github.repository }}"
          echo "ref=${{ github.ref }}"

      - name: Configure AWS credentials (OIDC)
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Who am I
        run: aws sts get-caller-identity

      - name: Login to Amazon ECR
        id: ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build & push Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:${{ github.sha }}
            ${{ steps.ecr.outputs.registry }}/${{ env.ECR_REPOSITORY }}:latest

      - name: Force ECS service deployment
        run: |
          aws ecs update-service \
            --cluster "${{ env.ECS_CLUSTER }}" \
            --service "${{ env.ECS_SERVICE }}" \
            --force-new-deployment \
            --region "${{ env.AWS_REGION }}"

      - name: Wait for service stability
        run: |
          aws ecs wait services-stable \
            --cluster "${{ env.ECS_CLUSTER }}" \
            --services "${{ env.ECS_SERVICE }}" \
            --region "${{ env.AWS_REGION }}"