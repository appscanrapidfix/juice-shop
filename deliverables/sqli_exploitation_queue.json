{
  "vulnerabilities": [
    {
      "ID": "SQLI-VULN-01",
      "source": "req.body.email & routes/login.ts:34",
      "combined_sources": ["req.body.email", "req.body.password"],
      "path": "Request → routes/login.ts → models.sequelize.query",
      "sink_call": "models.sequelize.query at routes/login.ts:34",
      "slot_type": "val",
      "sanitization_observed": "None",
      "concat_occurrences": "Template literal concatenation at routes/login.ts:34",
      "verdict": "vulnerable",
      "mismatch_reason": "Raw string concatenation instead of parameter binding for data values",
      "witness_example": "{\"email\":\"admin'\",\"password\":\"test\"}",
      "confidence": "high",
      "notes": "Direct template literal concatenation in SQL query without parameterization"
    },
    {
      "ID": "SQLI-VULN-02",
      "source": "req.query.q & routes/search.ts:23",
      "combined_sources": ["req.query.q"],
      "path": "Request → routes/search.ts → models.sequelize.query",
      "sink_call": "models.sequelize.query at routes/search.ts:23",
      "slot_type": "like",
      "sanitization_observed": "Length truncation only (200 chars)",
      "concat_occurrences": "Template literal concatenation at routes/search.ts:23",
      "verdict": "vulnerable",
      "mismatch_reason": "Raw string concatenation in LIKE patterns without % and _ escaping",
      "witness_example": "?q=test'",
      "confidence": "high",
      "notes": "Length truncation insufficient; no wildcard escaping for LIKE patterns"
    },
    {
      "ID": "SQLI-VULN-03",
      "source": "req.params.id & routes/trackOrder.ts:18",
      "combined_sources": ["req.params.id"],
      "path": "Request → routes/trackOrder.ts → db.ordersCollection.find",
      "sink_call": "db.ordersCollection.find at routes/trackOrder.ts:18",
      "slot_type": "val",
      "sanitization_observed": "Conditional regex replacement (when reflectedXssChallenge disabled)",
      "concat_occurrences": "Template literal in $where clause at routes/trackOrder.ts:18",
      "verdict": "vulnerable",
      "mismatch_reason": "Raw string concatenation in MongoDB $where JavaScript expression",
      "witness_example": "/rest/track-order/test'||'1'=='1",
      "confidence": "high",
      "notes": "NoSQL injection in MongoDB $where clause with JavaScript code execution"
    }
  ]
}